
public class AVLTree <T extends Comparable<T>>
{
	private AVLNode<T> root;
	
	public AVLTree(T root)
	{
		setRoot(null);
	}
	
	public AVLNode<T> getRoot()
	{
		return root;
	}
	
	private void setRoot(AVLNode<T> root)
	{
		this.root = root;
	}
	
	public void add (T element) throws Exception
	{
		root = add(root, element);
	}
	
	private AVLNode<T> add(AVLNode<T> root, T element) throws Exception
	{
		if( getRoot() == null ) {
			return new AVLNode<T> (element);
		} else if (element.compareTo(root.getElement()) == 0) {
			throw new Exception("Both elements are equeals.");
		} else if (element.compareTo(root.getElement()) < 0) {
			//root.getLeft().setElement(element);
			root.setLeft(add(root.getLeft(), element));
		} else if (element.compareTo(root.getElement()) > 0) {
			//root.getRight().setElement(element);
			root.setRight(add(root.getRight(), element));
		} return root;
	}
	
	public String toString()
	{
		return toString();
	}

}
